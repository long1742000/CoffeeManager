/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.BillDAO;
import Controller.ImportDAO;
import Model.Bill;
import Model.Import;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author HP
 */
public class ImportManager extends javax.swing.JFrame {

    /**
     * Creates new form ImportManager
     */
    public ImportManager() {
        initComponents();
        loadData();
    }
    
    public void loadData(){                                                         
        DefaultTableModel model = (DefaultTableModel)tbl_import.getModel();
        ImportDAO impDAO = new ImportDAO();
        ArrayList<Import> list = impDAO.getAll();
        int count = model.getRowCount();
        while(count>0){
            model.removeRow(count-1);
            count--;
        }
        for(Import item:list){
            Object[] row = {item.getID(),item.getEmployee().getUsername(), item.getDateCreate()};
            model.addRow(row);
        }
    }
    
    public void getByDate(int year, int month, int day){
        DefaultTableModel model = (DefaultTableModel)tbl_import.getModel();
        ImportDAO impDAO = new ImportDAO();
        ArrayList<Import> list = impDAO.getByDate(year, month, day);
        int count = model.getRowCount();
        while(count>0){
            model.removeRow(count-1);
            count--;
        }
        for(Import item:list){
            Object[] row = {item.getID(),item.getEmployee().getUsername(), item.getDateCreate()};
            model.addRow(row);
        }
    }
    
    public void getByDateBetween(int year1, int month1, int day1, int year2, int month2, int day2){
        DefaultTableModel model = (DefaultTableModel)tbl_import.getModel();
        ImportDAO impDAO = new ImportDAO();
        ArrayList<Import> list = impDAO.getByDateBetween(year1, month1, day1, year2, month2, day2);
        int count = model.getRowCount();
        while(count>0){
            model.removeRow(count-1);
            count--;
        }
        for(Import item:list){
            Object[] row = {item.getID(),item.getEmployee().getUsername(), item.getDateCreate()};
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        but_x = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        txt_day1 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txt_month1 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txt_year1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        txt_year2 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txt_month2 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        txt_day2 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txt_daySearch = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txt_monthSearch = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txt_yearSearch = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_import = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        but_x.setText("x");
        but_x.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_xActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel16.setText("Day");

        txt_day1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_day1KeyTyped(evt);
            }
        });

        jLabel17.setText("Month");

        txt_month1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_month1KeyTyped(evt);
            }
        });

        jLabel18.setText("Year");

        txt_year1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_year1KeyTyped(evt);
            }
        });

        jButton2.setText("Search");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        txt_year2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_year2KeyTyped(evt);
            }
        });

        jLabel19.setText("Year");

        txt_month2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_month2KeyTyped(evt);
            }
        });

        jLabel20.setText("Month");

        txt_day2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_day2KeyTyped(evt);
            }
        });

        jLabel21.setText("Day");

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel22.setText(">>");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_day1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_month1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_year1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel21)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_day2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_month2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_year2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(txt_day1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(txt_month1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(txt_year1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_year2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(txt_month2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20)
                    .addComponent(txt_day2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21)
                    .addComponent(jLabel22))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Search"));

        jLabel1.setText("Day");

        txt_daySearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_daySearchKeyTyped(evt);
            }
        });

        jLabel2.setText("Month");

        txt_monthSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_monthSearchKeyTyped(evt);
            }
        });

        jLabel15.setText("Year");

        txt_yearSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_yearSearchKeyTyped(evt);
            }
        });

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_daySearch, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txt_monthSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_yearSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_daySearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txt_monthSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(txt_yearSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        tbl_import.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Employee", "Date create"
            }
        ));
        tbl_import.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_importMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_import);
        if (tbl_import.getColumnModel().getColumnCount() > 0) {
            tbl_import.getColumnModel().getColumn(0).setMinWidth(30);
            tbl_import.getColumnModel().getColumn(0).setMaxWidth(30);
        }

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jButton3.setText("Reset");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(but_x))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(but_x)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void but_xActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_xActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_but_xActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int day = 0;
        int month = 0;
        int year = 0;

        // truyền tham số zô hàm getByDate
        if(txt_monthSearch.getText().length()==0 || txt_yearSearch.getText().length()==0){
            JOptionPane.showMessageDialog(this, "Month and Year is required");
            loadData();
        }
        else if(txt_daySearch.getText().length()==0){
            day = 0;
            month = Integer.parseInt(txt_monthSearch.getText());
            year = Integer.parseInt(txt_yearSearch.getText());
            if(month > 12){
                JOptionPane.showMessageDialog(this, "Invalid month");
                loadData();
            }
            else{
                getByDate(year, month, day);
            }
        }
        else if(txt_daySearch.getText().length()>2 || txt_monthSearch.getText().length()>2 || txt_yearSearch.getText().length()>4 || txt_yearSearch.getText().length()<4){
            JOptionPane.showMessageDialog(this, "Invalid date");
            loadData();
        }
        else{
            day = Integer.parseInt(txt_daySearch.getText());
            month = Integer.parseInt(txt_monthSearch.getText());
            year = Integer.parseInt(txt_yearSearch.getText());
            if(month > 12){
                JOptionPane.showMessageDialog(this, "Invalid month");
                loadData();
            }
            else if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12){
                if(day>31){
                    JOptionPane.showMessageDialog(this, "Invalid date");
                    loadData();
                }
                else{
                    getByDate(year, month, day);
                }
            }
            else if(month==2){
                if(day>28){
                    JOptionPane.showMessageDialog(this, "Invalid date");
                    loadData();
                }
                else{
                    getByDate(year, month, day);
                }
            }
            else if(month==4 || month==6 || month==9 || month==11){
                if(day>30){
                    JOptionPane.showMessageDialog(this, "Invalid date");
                    loadData();
                }
                else{
                    getByDate(year, month, day);
                }
            }
            else{
                JOptionPane.showMessageDialog(this, "Invalid month");
                loadData();
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        loadData();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if(txt_day1.getText().length()==0 || txt_month1.getText().length()==0 || txt_year1.getText().length()==0 || txt_day2.getText().length()==0 || txt_month2.getText().length()==0 || txt_year2.getText().length()==0){
            JOptionPane.showMessageDialog(this, "Please input full information");
            loadData();
        }
        else if(txt_day1.getText().length()>2 || txt_month1.getText().length()>2 || txt_year1.getText().length()>4 || txt_year1.getText().length()<4 || txt_day2.getText().length()>2 || txt_month2.getText().length()>2 || txt_year2.getText().length()>4 || txt_year2.getText().length()<4){
            JOptionPane.showMessageDialog(this, "Invalid Date (Date format: yyyy-MM-dd)");
            loadData();
        }
        else{
            int day1, month1, year1, day2, month2, year2;
            day1 = Integer.parseInt(txt_day1.getText());
            month1 = Integer.parseInt(txt_month1.getText());
            year1 = Integer.parseInt(txt_year1.getText());
            day2 = Integer.parseInt(txt_day2.getText());
            month2 = Integer.parseInt(txt_month2.getText());
            year2 = Integer.parseInt(txt_year2.getText());
            if(month1 > 12 || month2 > 12){
                JOptionPane.showMessageDialog(this, "Invalid month");
                loadData();
            }
            else{
                if(month1 == 1 || month1 == 3 || month1 == 5 || month1 == 7 || month1 == 8 || month1 == 10 || month1 == 12){
                    if(day1>31){
                        JOptionPane.showMessageDialog(this, "Invalid date");
                        loadData();
                    }
                    else if(month2 == 1 || month2 == 3 || month2 == 5 || month2 == 7 || month2 == 8 || month2 == 10 || month2 == 12){
                        if(day2>31){
                            JOptionPane.showMessageDialog(this, "Invalid date");
                            loadData();
                        }
                        else{
                            getByDateBetween(year1, month1, day1, year2, month2, day2);
                        }
                    }
                    else if(month2==2){
                        if(day2>28){
                            JOptionPane.showMessageDialog(this, "Invalid date");
                            loadData();
                        }
                        else{
                            getByDateBetween(year1, month1, day1, year2, month2, day2);
                        }
                    }
                    else if(month2==4 || month2==6 || month2==9 || month2==11){
                        if(day2>30){
                            JOptionPane.showMessageDialog(this, "Invalid date");
                            loadData();
                        }
                        else{
                            getByDateBetween(year1, month1, day1, year2, month2, day2);
                        }
                    }
                }
                else if(month1==2){
                    if(day1>28){
                        JOptionPane.showMessageDialog(this, "Invalid date");
                        loadData();
                    }
                    else if(month2 == 1 || month2 == 3 || month2 == 5 || month2 == 7 || month2 == 8 || month2 == 10 || month2 == 12){
                        if(day2>31){
                            JOptionPane.showMessageDialog(this, "Invalid date");
                            loadData();
                        }
                        else{
                            getByDateBetween(year1, month1, day1, year2, month2, day2);
                        }
                    }
                    else if(month2==2){
                        if(day2>28){
                            JOptionPane.showMessageDialog(this, "Invalid date");
                            loadData();
                        }
                        else{
                            getByDateBetween(year1, month1, day1, year2, month2, day2);
                        }
                    }
                    else if(month2==4 || month2==6 || month2==9 || month2==11){
                        if(day2>30){
                            JOptionPane.showMessageDialog(this, "Invalid date");
                            loadData();
                        }
                        else{
                            getByDateBetween(year1, month1, day1, year2, month2, day2);
                        }
                    }
                }
                else if(month1==4 || month1==6 || month1==9 || month1==11){
                    if(day1>30){
                        JOptionPane.showMessageDialog(this, "Invalid date");
                        loadData();
                    }
                    else if(month2 == 1 || month2 == 3 || month2 == 5 || month2 == 7 || month2 == 8 || month2 == 10 || month2 == 12){
                        if(day2>31){
                            JOptionPane.showMessageDialog(this, "Invalid date");
                            loadData();
                        }
                        else{
                            getByDateBetween(year1, month1, day1, year2, month2, day2);
                        }
                    }
                    else if(month2==2){
                        if(day2>28){
                            JOptionPane.showMessageDialog(this, "Invalid date");
                            loadData();
                        }
                        else{
                            getByDateBetween(year1, month1, day1, year2, month2, day2);
                        }
                    }
                    else if(month2==4 || month2==6 || month2==9 || month2==11){
                        if(day2>30){
                            JOptionPane.showMessageDialog(this, "Invalid date");
                            loadData();
                        }
                        else{
                            getByDateBetween(year1, month1, day1, year2, month2, day2);
                        }
                    }
                }
                else{
                    JOptionPane.showMessageDialog(this, "Invalid Date (Date format: yyyy-MM-dd)");
                    loadData();
                }
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txt_daySearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_daySearchKeyTyped
        // ràng buộc text, chỉ được nhập số
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE))){
            evt.consume();
        }
    }//GEN-LAST:event_txt_daySearchKeyTyped

    private void txt_monthSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_monthSearchKeyTyped
        // ràng buộc text, chỉ được nhập số
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE))){
            evt.consume();
        }
    }//GEN-LAST:event_txt_monthSearchKeyTyped

    private void txt_yearSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_yearSearchKeyTyped
        // ràng buộc text, chỉ được nhập số
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE))){
            evt.consume();
        }
    }//GEN-LAST:event_txt_yearSearchKeyTyped

    private void txt_day1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_day1KeyTyped
        // ràng buộc text, chỉ được nhập số
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE))){
            evt.consume();
        }
    }//GEN-LAST:event_txt_day1KeyTyped

    private void txt_month1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_month1KeyTyped
        // ràng buộc text, chỉ được nhập số
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE))){
            evt.consume();
        }
    }//GEN-LAST:event_txt_month1KeyTyped

    private void txt_year1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_year1KeyTyped
        // ràng buộc text, chỉ được nhập số
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE))){
            evt.consume();
        }
    }//GEN-LAST:event_txt_year1KeyTyped

    private void txt_day2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_day2KeyTyped
        // ràng buộc text, chỉ được nhập số
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE))){
            evt.consume();
        }
    }//GEN-LAST:event_txt_day2KeyTyped

    private void txt_month2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_month2KeyTyped
        // ràng buộc text, chỉ được nhập số
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE))){
            evt.consume();
        }
    }//GEN-LAST:event_txt_month2KeyTyped

    private void txt_year2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_year2KeyTyped
        // ràng buộc text, chỉ được nhập số
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE))){
            evt.consume();
        }
    }//GEN-LAST:event_txt_year2KeyTyped

    private void tbl_importMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_importMouseClicked
        // TODO add your handling code here:
        // Nhấp vào thì lấy cái Code của dòng đó ra
        int row = tbl_import.getSelectedRow();
        TableModel table = tbl_import.getModel();
        int id = Integer.parseInt(String.valueOf(table.getValueAt(row, 0)));
        ImportDetailForm i = new ImportDetailForm(id);
        i.setVisible(true);
        i.setLocationRelativeTo(null);
    }//GEN-LAST:event_tbl_importMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ImportManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ImportManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ImportManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ImportManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ImportManager().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton but_x;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbl_import;
    private javax.swing.JTextField txt_day1;
    private javax.swing.JTextField txt_day2;
    private javax.swing.JTextField txt_daySearch;
    private javax.swing.JTextField txt_month1;
    private javax.swing.JTextField txt_month2;
    private javax.swing.JTextField txt_monthSearch;
    private javax.swing.JTextField txt_year1;
    private javax.swing.JTextField txt_year2;
    private javax.swing.JTextField txt_yearSearch;
    // End of variables declaration//GEN-END:variables
}
