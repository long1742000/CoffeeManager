/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.BillDAO;
import Model.Bill;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author HP
 */
public class BillActiveForm extends javax.swing.JFrame {

    /**
     * Creates new form BillActiveForm
     */
    public BillActiveForm() {
        initComponents();
        loadData();
    }
    
    public void loadData(){                                                         
        DefaultTableModel model = (DefaultTableModel)tbl_bill.getModel();
        BillDAO billDAO = new BillDAO();
        ArrayList<Bill> list = billDAO.getAll();
        int count = model.getRowCount();
        while(count>0){
            model.removeRow(count-1);
            count--;
        }
        for(Bill item:list){
            Object[] row = {item.getCode(), item.getEmployee().getUsername(), item.getCustomer().getFullName(), item.getDateCreate(), item.getAmount(), item.getAddress()};
            model.addRow(row);
        }
    }
    
    public void getByDate(int year, int month, int day){
        DefaultTableModel model = (DefaultTableModel)tbl_bill.getModel();
        BillDAO billDAO = new BillDAO();
        ArrayList<Bill> list = billDAO.getByDate(year, month, day);
        int count = model.getRowCount();
        while(count>0){
            model.removeRow(count-1);
            count--;
        }
        for(Bill item:list){
            Object[] row = {item.getCode(), item.getEmployee().getUsername(), item.getCustomer().getFullName(), item.getDateCreate(), item.getAmount(), item.getAddress()};
            model.addRow(row);
        }
    }
    
    public void getByDateBetween(int year1, int month1, int day1, int year2, int month2, int day2){
        DefaultTableModel model = (DefaultTableModel)tbl_bill.getModel();
        BillDAO billDAO = new BillDAO();
        ArrayList<Bill> list = billDAO.getByDateBetween(year1,month1,day1,year2,month2,day2);
        int count = model.getRowCount();
        while(count>0){
            model.removeRow(count-1);
            count--;
        }
        for(Bill item:list){
            Object[] row = {item.getCode(), item.getEmployee().getUsername(), item.getCustomer().getFullName(), item.getDateCreate(), item.getAmount(), item.getAddress()};
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txt_year = new javax.swing.JTextField();
        txt_month = new javax.swing.JTextField();
        but_search = new javax.swing.JButton();
        txt_day = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_bill = new javax.swing.JTable();
        but_reset = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txt_day1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txt_year1 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txt_month1 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txt_year2 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txt_month2 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txt_day2 = new javax.swing.JTextField();
        but_search1 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        but_reset1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jLabel3.setText("Day");

        jLabel4.setText("Month");

        jLabel5.setText("Year");

        txt_year.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_yearKeyTyped(evt);
            }
        });

        txt_month.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_monthKeyTyped(evt);
            }
        });

        but_search.setText("Search");
        but_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_searchActionPerformed(evt);
            }
        });

        txt_day.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_dayKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(11, 11, 11)
                .addComponent(txt_day, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(txt_month, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(txt_year, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(but_search, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txt_day, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(but_search)
                    .addComponent(txt_month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(txt_year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tbl_bill.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Code", "Employee", "Member", "DateCreate", "Amount", "Address"
            }
        ));
        tbl_bill.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_billMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_bill);

        but_reset.setText("Reset");
        but_reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_resetActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel6.setText("Day");

        txt_day1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_day1KeyTyped(evt);
            }
        });

        jLabel7.setText("Month");

        txt_year1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_year1KeyTyped(evt);
            }
        });

        jLabel8.setText("Year");

        txt_month1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_month1KeyTyped(evt);
            }
        });

        jLabel9.setText("Day");

        txt_year2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_year2KeyTyped(evt);
            }
        });

        jLabel10.setText("Year");

        txt_month2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_month2KeyTyped(evt);
            }
        });

        jLabel11.setText("Month");

        txt_day2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_day2KeyTyped(evt);
            }
        });

        but_search1.setText("Search");
        but_search1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_search1ActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setText(">>");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_day1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_month1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_year1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addComponent(jLabel12)
                .addGap(49, 49, 49)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_day2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_month2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_year2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(but_search1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(353, 353, 353))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txt_day1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txt_year1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(txt_month1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(txt_year2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(txt_month2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(txt_day2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(but_search1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(but_reset, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(but_reset, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        but_reset1.setText("x");
        but_reset1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_reset1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(805, Short.MAX_VALUE)
                .addComponent(but_reset1)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(but_reset1)
                .addContainerGap(486, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(43, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_yearKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_yearKeyTyped
        // ràng buộc text, chỉ được nhập số
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE))){
            evt.consume();
        }
    }//GEN-LAST:event_txt_yearKeyTyped

    private void txt_monthKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_monthKeyTyped
        // ràng buộc text, chỉ được nhập số
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE))){
            evt.consume();
        }
    }//GEN-LAST:event_txt_monthKeyTyped

    private void but_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_searchActionPerformed
        // Nút search Bill
        int day = 0;
        int month = 0;
        int year = 0;

        // truyền tham số zô hàm getByDate
        if(txt_month.getText().length()==0 || txt_year.getText().length()==0){
            JOptionPane.showMessageDialog(this, "Month and Year is required");
            loadData();
        }
        else if(txt_day.getText().length()==0){
            day = 0;
            month = Integer.parseInt(txt_month.getText());
            year = Integer.parseInt(txt_year.getText());
            if(month > 12){
                JOptionPane.showMessageDialog(this, "Invalid month");
                loadData();
            }
            else{
                getByDate(year, month, day);
            }
        }
        else if(txt_day.getText().length()>2 || txt_month.getText().length()>2 || txt_year.getText().length()>4 || txt_year.getText().length()<4){
            JOptionPane.showMessageDialog(this, "Invalid date");
            loadData();
        }
        else{
            day = Integer.parseInt(txt_day.getText());
            month = Integer.parseInt(txt_month.getText());
            year = Integer.parseInt(txt_year.getText());
            if(month > 12){
                JOptionPane.showMessageDialog(this, "Invalid month");
                loadData();
            }
            else if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12){
                if(day>31){
                    JOptionPane.showMessageDialog(this, "Invalid date");
                    loadData();
                }
                else{
                    getByDate(year, month, day);
                }
            }
            else if(month==2){
                if(day>28){
                    JOptionPane.showMessageDialog(this, "Invalid date");
                    loadData();
                }
                else{
                    getByDate(year, month, day);
                }
            }
            else if(month==4 || month==6 || month==9 || month==11){
                if(day>30){
                    JOptionPane.showMessageDialog(this, "Invalid date");
                    loadData();
                }
                else{
                    getByDate(year, month, day);
                }
            }
            else{
                JOptionPane.showMessageDialog(this, "Invalid month");
                loadData();
            }
        }
    }//GEN-LAST:event_but_searchActionPerformed

    private void txt_dayKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_dayKeyTyped
        // ràng buộc text, chỉ được nhập số
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE))){
            evt.consume();
        }
    }//GEN-LAST:event_txt_dayKeyTyped

    private void tbl_billMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_billMouseClicked
        // Nhấp vào thì lấy cái Code của dòng đó ra
        int row = tbl_bill.getSelectedRow();
        TableModel table = tbl_bill.getModel();
        int code = Integer.parseInt(String.valueOf(table.getValueAt(row, 0)));
        BillDetailForm b = new BillDetailForm(code);        // mình truyền cái code này qua BillDetailForm
        b.setVisible(true);
        b.setLocationRelativeTo(null);
    }//GEN-LAST:event_tbl_billMouseClicked

    private void but_resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_resetActionPerformed
        // Nút reset (để reset lại table)
        loadData();
    }//GEN-LAST:event_but_resetActionPerformed

    private void txt_day1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_day1KeyTyped
        // ràng buộc text, chỉ được nhập số
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE))){
            evt.consume();
        }
    }//GEN-LAST:event_txt_day1KeyTyped

    private void txt_year1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_year1KeyTyped
        // ràng buộc text, chỉ được nhập số
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE))){
            evt.consume();
        }
    }//GEN-LAST:event_txt_year1KeyTyped

    private void txt_month1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_month1KeyTyped
        // ràng buộc text, chỉ được nhập số
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE))){
            evt.consume();
        }
    }//GEN-LAST:event_txt_month1KeyTyped

    private void txt_year2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_year2KeyTyped
        // ràng buộc text, chỉ được nhập số
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE))){
            evt.consume();
        }
    }//GEN-LAST:event_txt_year2KeyTyped

    private void txt_month2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_month2KeyTyped
        // ràng buộc text, chỉ được nhập số
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE))){
            evt.consume();
        }
    }//GEN-LAST:event_txt_month2KeyTyped

    private void txt_day2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_day2KeyTyped
        // ràng buộc text, chỉ được nhập số
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE))){
            evt.consume();
        }
    }//GEN-LAST:event_txt_day2KeyTyped

    private void but_search1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_search1ActionPerformed
        // search từ ngày này đến ngày kia
        if(txt_day1.getText().length()==0 || txt_month1.getText().length()==0 || txt_year1.getText().length()==0 || txt_day2.getText().length()==0 || txt_month2.getText().length()==0 || txt_year2.getText().length()==0){
            JOptionPane.showMessageDialog(this, "Please input full information");
            loadData();
        }
        else if(txt_day1.getText().length()>2 || txt_month1.getText().length()>2 || txt_year1.getText().length()>4 || txt_year1.getText().length()<4 || txt_day2.getText().length()>2 || txt_month2.getText().length()>2 || txt_year2.getText().length()>4 || txt_year2.getText().length()<4){
            JOptionPane.showMessageDialog(this, "Invalid Date (Date format: yyyy-MM-dd)");
            loadData();
        }
        else{
            int day1, month1, year1, day2, month2, year2;
            day1 = Integer.parseInt(txt_day1.getText());
            month1 = Integer.parseInt(txt_month1.getText());
            year1 = Integer.parseInt(txt_year1.getText());
            day2 = Integer.parseInt(txt_day2.getText());
            month2 = Integer.parseInt(txt_month2.getText());
            year2 = Integer.parseInt(txt_year2.getText());
            if(month1 > 12 || month2 > 12){
                JOptionPane.showMessageDialog(this, "Invalid month");
                loadData();
            }
            else{
                if(month1 == 1 || month1 == 3 || month1 == 5 || month1 == 7 || month1 == 8 || month1 == 10 || month1 == 12){
                    if(day1>31){
                        JOptionPane.showMessageDialog(this, "Invalid date");
                        loadData();
                    }
                    else if(month2 == 1 || month2 == 3 || month2 == 5 || month2 == 7 || month2 == 8 || month2 == 10 || month2 == 12){
                        if(day2>31){
                            JOptionPane.showMessageDialog(this, "Invalid date");
                            loadData();
                        }
                        else{
                            getByDateBetween(year1, month1, day1, year2, month2, day2);
                        }
                    }
                    else if(month2==2){
                        if(day2>28){
                            JOptionPane.showMessageDialog(this, "Invalid date");
                            loadData();
                        }
                        else{
                            getByDateBetween(year1, month1, day1, year2, month2, day2);
                        }
                    }
                    else if(month2==4 || month2==6 || month2==9 || month2==11){
                        if(day2>30){
                            JOptionPane.showMessageDialog(this, "Invalid date");
                            loadData();
                        }
                        else{
                            getByDateBetween(year1, month1, day1, year2, month2, day2);
                        }
                    }
                }
                else if(month1==2){
                    if(day1>28){
                        JOptionPane.showMessageDialog(this, "Invalid date");
                        loadData();
                    }
                    else if(month2 == 1 || month2 == 3 || month2 == 5 || month2 == 7 || month2 == 8 || month2 == 10 || month2 == 12){
                        if(day2>31){
                            JOptionPane.showMessageDialog(this, "Invalid date");
                            loadData();
                        }
                        else{
                            getByDateBetween(year1, month1, day1, year2, month2, day2);
                        }
                    }
                    else if(month2==2){
                        if(day2>28){
                            JOptionPane.showMessageDialog(this, "Invalid date");
                            loadData();
                        }
                        else{
                            getByDateBetween(year1, month1, day1, year2, month2, day2);
                        }
                    }
                    else if(month2==4 || month2==6 || month2==9 || month2==11){
                        if(day2>30){
                            JOptionPane.showMessageDialog(this, "Invalid date");
                            loadData();
                        }
                        else{
                            getByDateBetween(year1, month1, day1, year2, month2, day2);
                        }
                    }
                }
                else if(month1==4 || month1==6 || month1==9 || month1==11){
                    if(day1>30){
                        JOptionPane.showMessageDialog(this, "Invalid date");
                        loadData();
                    }
                    else if(month2 == 1 || month2 == 3 || month2 == 5 || month2 == 7 || month2 == 8 || month2 == 10 || month2 == 12){
                        if(day2>31){
                            JOptionPane.showMessageDialog(this, "Invalid date");
                            loadData();
                        }
                        else{
                            getByDateBetween(year1, month1, day1, year2, month2, day2);
                        }
                    }
                    else if(month2==2){
                        if(day2>28){
                            JOptionPane.showMessageDialog(this, "Invalid date");
                            loadData();
                        }
                        else{
                            getByDateBetween(year1, month1, day1, year2, month2, day2);
                        }
                    }
                    else if(month2==4 || month2==6 || month2==9 || month2==11){
                        if(day2>30){
                            JOptionPane.showMessageDialog(this, "Invalid date");
                            loadData();
                        }
                        else{
                            getByDateBetween(year1, month1, day1, year2, month2, day2);
                        }
                    }
                }
                else{
                    JOptionPane.showMessageDialog(this, "Invalid Date (Date format: yyyy-MM-dd)");
                    loadData();
                }
            }
        }
    }//GEN-LAST:event_but_search1ActionPerformed

    private void but_reset1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_reset1ActionPerformed
        // nút tắt
        this.dispose();
    }//GEN-LAST:event_but_reset1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BillActiveForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BillActiveForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BillActiveForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BillActiveForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BillActiveForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton but_reset;
    private javax.swing.JButton but_reset1;
    private javax.swing.JButton but_search;
    private javax.swing.JButton but_search1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbl_bill;
    private javax.swing.JTextField txt_day;
    private javax.swing.JTextField txt_day1;
    private javax.swing.JTextField txt_day2;
    private javax.swing.JTextField txt_month;
    private javax.swing.JTextField txt_month1;
    private javax.swing.JTextField txt_month2;
    private javax.swing.JTextField txt_year;
    private javax.swing.JTextField txt_year1;
    private javax.swing.JTextField txt_year2;
    // End of variables declaration//GEN-END:variables
}
