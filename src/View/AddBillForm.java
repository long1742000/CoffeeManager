/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.BillDAO;
import Controller.BillDetailDAO;
import Controller.CustomerDAO;
import Controller.EmployeeDAO;
import Controller.VoucherDAO;
import Model.Bill;
import Model.Customer;
import Model.Voucher;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author HP
 */
public class AddBillForm extends javax.swing.JFrame {

    private static java.sql.Date convertDate(java.util.Date date){              // hàm parse kiểu ngày tháng UTIL ra ngày tháng của SQL
        java.sql.Date sqlDate = new java.sql.Date(date.getTime());
        return sqlDate;
    }
    
    public AddBillForm(int total, int idEmployee, int idCustomer, int totalAllDay, int cash, int momo, int vnPay, int discount, int idEx) {
        Calendar cal = new GregorianCalendar();
        EmployeeDAO emDAO = new EmployeeDAO();
        CustomerDAO cusDAO = new CustomerDAO();
        
        // lấy ngày tháng năm hiện tại
        int day = cal.get(Calendar.DAY_OF_MONTH);
        int month = cal.get(Calendar.MONTH);
        int year = cal.get(Calendar.YEAR);
        
        // sử dụng dữ liệu random cho cột Code
        java.util.Random r = new java.util.Random();
        int start = 100000;
        int end = 1000000;
        int code = r.nextInt(end-start)+start;
        
        
        initComponents();  
        lbl_code.setText(String.valueOf(code));
        lbl_day.setText(String.valueOf(day));
        lbl_month.setText(String.valueOf(month+1));             // month cộng thêm 1 mới = month hiện tại
        lbl_year.setText(String.valueOf(year));
        lbl_employee.setText(String.valueOf(emDAO.getByID(idEmployee).getUsername()));
        lbl_totalAllDay.setText(String.valueOf(totalAllDay));
        
        // nếu như người mua ko phải member thì chuyển thành Bill mặc định
        if(idCustomer==0){
            txt_idMember.setText("0");
            txt_member.setText("Guest");
            txt_type.setText("");
        }
        else{   // nếu người mua là member thì chuyển thành Bill dành cho member
            txt_idMember.setText(String.valueOf(idCustomer));
            txt_member.setText(String.valueOf(cusDAO.getById(idCustomer).getFullName()));
            txt_type.setText(String.valueOf(cusDAO.getById(idCustomer).getMemberType().getName()));
        }
        
        // nếu member là Silver thì giữ nguyên total (ko giảm giá)
        if(txt_type.getText().equals("") || txt_type.getText().equals("Silver")){
            txt_amount.setText(String.valueOf(total));
        }
        // nếu member là Gold thì giảm giá 2%
        else if(txt_type.getText().equals("Gold")){
            int total1 = total - total*2/100;
            txt_amount.setText(String.valueOf(total1));
            discount += total*2/100;
        }
        
        // nếu member là Platinum thì giảm giá 5%
        else if(txt_type.getText().equals("Platinum")){
            int total1 = total - total*5/100;
            txt_amount.setText(String.valueOf(total1));
            discount += total*5/100;
        }     
        lbl_cash.setText(String.valueOf(cash));
        lbl_momo.setText(String.valueOf(momo));
        lbl_vnpay.setText(String.valueOf(vnPay));
        lbl_discount.setText(String.valueOf(discount));
        lbl_idEx.setText(String.valueOf(idEx));
    }

    private AddBillForm() {
        
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lbl_totalAllDay = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lbl_code = new javax.swing.JLabel();
        lbl_day = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lbl_month = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lbl_year = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lbl_employee = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txt_member = new javax.swing.JTextField();
        txt_idMember = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txt_type = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txt_voucher = new javax.swing.JTextField();
        but_use = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        txt_amount = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        cbx_payment = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        txt_receive = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txt_giveBack = new javax.swing.JTextField();
        but_give = new javax.swing.JButton();
        chk_takeAway = new javax.swing.JCheckBox();
        txt_address = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        but_print = new javax.swing.JButton();
        lbl_cash = new javax.swing.JLabel();
        lbl_momo = new javax.swing.JLabel();
        lbl_discount = new javax.swing.JLabel();
        lbl_vnpay = new javax.swing.JLabel();
        lbl_idEx = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        lbl_totalAllDay.setForeground(new java.awt.Color(255, 255, 255));
        lbl_totalAllDay.setText("0");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Bill NO.");

        lbl_code.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbl_code.setText("0");

        lbl_day.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_day.setText("Day");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("/");

        lbl_month.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_month.setText("Month");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("/");

        lbl_year.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_year.setText("Year");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Employee");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("-");

        lbl_employee.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbl_employee.setText("Employee");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Member");

        txt_member.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_member.setEnabled(false);

        txt_idMember.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_idMember.setEnabled(false);

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Type");

        txt_type.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_type.setEnabled(false);

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Voucher");

        txt_voucher.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        but_use.setText("Use");
        but_use.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_useActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Amount");

        txt_amount.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_amount.setEnabled(false);

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("Payment by");

        cbx_payment.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbx_payment.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cash", "Momo", "VNPay" }));
        cbx_payment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbx_paymentActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("Receive");

        txt_receive.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("Give back");

        txt_giveBack.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_giveBack.setEnabled(false);

        but_give.setText("-");
        but_give.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_giveActionPerformed(evt);
            }
        });

        chk_takeAway.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chk_takeAway.setText("Take away");
        chk_takeAway.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_takeAwayActionPerformed(evt);
            }
        });

        txt_address.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_address.setEnabled(false);

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Address");

        but_print.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        but_print.setText("Print");
        but_print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_printActionPerformed(evt);
            }
        });

        lbl_cash.setForeground(new java.awt.Color(255, 255, 255));
        lbl_cash.setText("cash");

        lbl_momo.setForeground(new java.awt.Color(255, 255, 255));
        lbl_momo.setText("momo");

        lbl_discount.setForeground(new java.awt.Color(255, 255, 255));
        lbl_discount.setText("discount");

        lbl_vnpay.setForeground(new java.awt.Color(255, 255, 255));
        lbl_vnpay.setText("vnpay");

        lbl_idEx.setForeground(new java.awt.Color(255, 255, 255));
        lbl_idEx.setText("idEx");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(72, Short.MAX_VALUE)
                .addComponent(but_print, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbl_discount))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(228, 228, 228)
                        .addComponent(lbl_vnpay)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_totalAllDay)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(176, 176, 176)
                                        .addComponent(jLabel7)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel8)
                                        .addGap(18, 18, 18)
                                        .addComponent(lbl_employee))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(196, 196, 196)
                                        .addComponent(lbl_day)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lbl_month)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lbl_year)))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(89, 89, 89)
                                    .addComponent(lbl_cash)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(lbl_code)
                                    .addGap(30, 30, 30))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbl_idEx))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel11))
                                .addGap(28, 28, 28)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txt_member)
                                        .addGap(18, 18, 18)
                                        .addComponent(txt_idMember, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txt_type)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel13))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_address, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_giveBack, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(chk_takeAway, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel10))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_amount, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(but_give, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(txt_receive))
                                        .addGap(94, 94, 94))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(cbx_payment, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txt_voucher))
                                        .addGap(18, 18, 18)
                                        .addComponent(but_use)))))))
                .addGap(30, 30, 30))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(20, 20, 20)
                    .addComponent(lbl_momo)
                    .addContainerGap(449, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_totalAllDay)
                            .addComponent(lbl_idEx))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(lbl_code)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbl_cash)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_day)
                    .addComponent(jLabel5)
                    .addComponent(lbl_month)
                    .addComponent(jLabel6)
                    .addComponent(lbl_year))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(lbl_employee))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txt_member, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_idMember, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txt_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txt_voucher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(but_use))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txt_amount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(cbx_payment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txt_receive, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(txt_giveBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(but_give))
                .addGap(18, 18, 18)
                .addComponent(lbl_vnpay)
                .addGap(11, 11, 11)
                .addComponent(chk_takeAway)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(18, 18, 18)
                .addComponent(but_print, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbl_discount))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(54, 54, 54)
                    .addComponent(lbl_momo)
                    .addContainerGap(506, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chk_takeAwayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_takeAwayActionPerformed
        // TODO add your handling code here:
        if(chk_takeAway.isSelected()){  // chỉnh checkbox Take Away để tắt mở Address
            txt_address.setEnabled(true);
        }
        else{
            txt_address.setEnabled(false);
        }
    }//GEN-LAST:event_chk_takeAwayActionPerformed

    private void cbx_paymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbx_paymentActionPerformed
        // TODO add your handling code here:
        if(cbx_payment.equals("Cash")){     // nếu khách chọn thanh toán bằng tiền mặt thì mở txt "receive"
            txt_receive.setEnabled(true);
        }
        else {
            txt_receive.setText(txt_amount.getText());
            txt_receive.setEnabled(false);
        }
    }//GEN-LAST:event_cbx_paymentActionPerformed

    private void but_useActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_useActionPerformed
        // TODO add your handling code here:
        
        int discount1 = Integer.parseInt(String.valueOf(lbl_discount.getText()));               // tạo 1 cái biến đếm tổng số tiền giảm giá để xíu nữa quăng vào SaleAllDay
        String code = txt_voucher.getText();
        if(code.length()==0){           // nếu ko nhập voucher mà nhấn vào nút use thì đkm vui lòng nhập giùm cái ~
            JOptionPane.showMessageDialog(this, "Don't have any voucher to use. Please input to use");
        }
        else{           // nhập voucher rồi
            VoucherDAO voucherDAO = new VoucherDAO();
            Voucher voucher = voucherDAO.getbyCode(code);
            if(voucher==null){              // nhập rồi thì check coi voucher này có đúng ko
                JOptionPane.showMessageDialog(this, "Incorrect code");
            }
            else if(voucher.isStatus()==false){             // check coi voucher này có ai dùng chưa
                JOptionPane.showMessageDialog(this, "Voucher has been used ");
            }
            else{               // oke voucher sịn thì giảm giá theo discount voucher đó 
                if(voucherDAO.useVoucher(voucher)){
                    JOptionPane.showMessageDialog(this, "Use successfully ");           // hiện bảng lên cho nó vui
                    int discount = voucher.getDiscount();
                    int total = Integer.parseInt(txt_amount.getText());
                    int total1 = total*discount/100;            // tiến hành giảm giá
                    int total2 = total - total1;
                    txt_amount.setText(String.valueOf(total2));
                    txt_amount.setEnabled(false);
                    but_use.setEnabled(false);
                    discount1 += total*discount/100;            // cộng dồn lên
                    lbl_discount.setText(String.valueOf(discount1));            // cho label giữ giùm
                }
                else{
                    JOptionPane.showMessageDialog(this, "Use failed!!!!!!");            // nếu có trục trặc gì thì...
                }    
            }
        }
    }//GEN-LAST:event_but_useActionPerformed

    private void but_giveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_giveActionPerformed
        // TODO add your handling code here:        // nút này ko bắt buộc phải nhấn, chỉ giành cho tụi nhân viên tính tiền ngu
        String rec = txt_receive.getText();
        if(rec.length()==0){                    // ko nhập số tiền nhận được mà đòi biết số tiền phải thối ~
            JOptionPane.showMessageDialog(this, "Please enter the amount received");
        }
        else{
            int re = Integer.parseInt(rec);
            int total = Integer.parseInt(txt_amount.getText());
            if(re<total){                       // khách đưa thiếu tiền mà còn nhận đkm ~
                JOptionPane.showMessageDialog(this, "The amount is not enough for the total bill");
            }
            else{                   // oke xong xuôi hết thì tính tiền thối 
                int giveBack = re - total;
                txt_giveBack.setText(String.valueOf(giveBack));
            }  
        }      
    }//GEN-LAST:event_but_giveActionPerformed

    private void but_printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_printActionPerformed
        try {                                               // xong xuôi hết thì nhấn nút print để in Bill (phải có máy in)
            BillDAO billDAO = new BillDAO();
            Bill bill = new Bill();
            EmployeeDAO emDAO = new EmployeeDAO();
            CustomerDAO cusDAO = new CustomerDAO();
            VoucherDAO vouDAO = new VoucherDAO();
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");              // tạo 1 cái biến parse ngày tháng năm 
            int cash, momo, vnPay, discount;                                        // tạo các biến giữ giùm tổng các loại thanh toán (để xí có dữ liệu sử dụng cho SaleAllDay)
            cash = Integer.parseInt(lbl_cash.getText());                            // quăng vô cho lable giữ hộ vs dễ gửi qua các form khác
            momo = Integer.parseInt(lbl_momo.getText());
            vnPay = Integer.parseInt(lbl_vnpay.getText());
            discount = Integer.parseInt(lbl_discount.getText());
            
            // lấy id nhân viên
            String userEmployee = lbl_employee.getText();
            int userEmployee1 = Integer.parseInt(String.valueOf(emDAO.getByUsername(userEmployee).getID()));
            
            // lấy id thành viên
            int cus = Integer.parseInt(txt_idMember.getText());
            if(cus==0){                                                     // nếu ko phải member thì quăng vô 1 value rác (có ID = 36 trong database)
                cus = 36;
            }
            else{                                                       // là member thì kím coi là thằng nào
                cus = Integer.parseInt(txt_idMember.getText());
                Customer customer = cusDAO.getById(cus);
                int id = customer.getID();
                int type = 1;                                           // mặc định type sẽ là Silver
                double point = customer.getPoints();                    // tạo biến giữ Points của khách
                double pointMember = customer.getPointMember();         // tạo biến giữ tổng điểm mua của khách
                double total = Integer.parseInt(txt_amount.getText());  // tổng số tiền các Product (bao gồm cả giảm giá)
                
                point += total/10000;                   // tích luỹ điểm cho khách (10k = 1 điểm)
                pointMember += total/10000;
                
                cusDAO.addPoints(point, id);            // dùng hàm addPoints để cập nhật Points cho khách
                cusDAO.addPointMember(pointMember, id);         // dùng hàm addPointMember để cập nhật tổng điểm mua cho khách
                if(pointMember>=50 && pointMember <100){             // lúc này kiểm tra coi tổng điểm mua của khách đủ điều kiện để nâng lên không (Silver lên Gold, Gold lên Platinum)
                    type = 2;
                }
                if(pointMember>=100){
                    type = 3;
                }
                cusDAO.addType(pointMember, id, type);        // nếu có nâng lên thì hàm addType update, ko thì thôi
            }
            
            // lấy id payment by
            int pay;                        // tạo biến pay tượng trưng cho PaymentByID
            String paymentBy = cbx_payment.getSelectedItem().toString();        // ép kiểu value trong combobox ra String (cho dễ xài)
            if(paymentBy.equals("Cash")){                                   // Cập nhật biến pay
                pay = 1;
            }
            else if(paymentBy.equals("Momo")){
                pay = 2;
            }
            else{
                pay = 3;
            }
            
            // lấy id voucher
            String voucher = txt_voucher.getText();
            int voucherID;
            if(voucher.length()==0){                        // nếu như ko nhập voucher (gán voucherID vào 1 value rác có ID = 4 trong database)
                voucherID = 4;
            }
            else{
                voucherID = Integer.parseInt(String.valueOf(vouDAO.getbyCode(voucher).getID()));   // nếu có thì oke lấy
            }
            
            // lấy code bill
            int code = Integer.parseInt(lbl_code.getText());                // Code này được lấy dữ liệu random ở trên
            
            // lấy ngày tháng năm
            String day = lbl_day.getText();
            String month = lbl_month.getText();
            String year = lbl_year.getText();
            Date strDate = sdf.parse(year+"-"+month+"-"+day);               // lúc này strDate là kiểu Date của util
            
            // lấy amount
            int amount = Integer.parseInt(txt_amount.getText());
            if(paymentBy.equals("Cash")){                                   // nếu như thanh toán bằng tiền mặt thì biến cash + thêm amount
                cash += amount;
                lbl_cash.setText(String.valueOf(cash));
            }
            else if(paymentBy.equals("Momo")){                              // tương tự vs momo
                momo += amount;
                lbl_momo.setText(String.valueOf(momo));
            }
            else{                                                           // VNPay cũng vậy
                vnPay += amount;
                lbl_vnpay.setText(String.valueOf(vnPay));
            }
            
            // lấy address
            String address = txt_address.getText();
            if(address.length()==0){                                        // nếu như ko điền vào Address thì mặc định là "dùng tại chi nhánh"
                address = "Used at branch";
            }
            else{
                address = txt_address.getText();                            // còn điền vào thì oke lấy
            }
            
            // có đầy đủ dữ liệu hết rồi thì dùng hàm add để thêm Bill thôi :V
            bill.setEmployeeID(userEmployee1);
            bill.setCustomerID(cus);
            bill.setPaymentByID(pay);
            bill.setVoucherID(voucherID);
            bill.setSaleAllDayID(6);                            // gán zô SaleAllDayID = 6 tạm (trong DB)
            bill.setCode(code);
            bill.setDateCreate(convertDate(strDate));           // dùng hàm convertDate (ở trên đầu code) để ép strDate thành Date trong sql
            bill.setAmount(amount);
            bill.setAddress(address);
            bill.setStatus(true);
            billDAO.add(bill);
            
            int totalAllDay = Integer.parseInt(lbl_totalAllDay.getText());      // tạo biến tổng tiền tất cả Bill để xí đem qua Form SaleAllDay xài
            totalAllDay = totalAllDay + amount;                                 // khi mà print Bill ra rồi thì cập nhật biến này lên 
            
            BillDetailDAO billDetailDAO = new BillDetailDAO();
            int idBill = billDAO.getByCode(code).getID();                       // in Bill ra rồi thì lấy ID của Bill đó luôn
            billDetailDAO.saveBill(idBill);                                     // lấy được rồi thì đưa tất cả sản phẩm bên Bill rác (ID=43 trong database)
            
            this.dispose();
            SaleForm s = new SaleForm(userEmployee1, 0, totalAllDay, cash, momo, vnPay, discount, 0);
            s.setVisible(true);
            s.setLocationRelativeTo(null);
        } catch (ParseException ex) {
            Logger.getLogger(AddBillForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_but_printActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddBillForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddBillForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddBillForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddBillForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddBillForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton but_give;
    private javax.swing.JButton but_print;
    private javax.swing.JButton but_use;
    private javax.swing.JComboBox<String> cbx_payment;
    private javax.swing.JCheckBox chk_takeAway;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbl_cash;
    private javax.swing.JLabel lbl_code;
    private javax.swing.JLabel lbl_day;
    private javax.swing.JLabel lbl_discount;
    private javax.swing.JLabel lbl_employee;
    private javax.swing.JLabel lbl_idEx;
    private javax.swing.JLabel lbl_momo;
    private javax.swing.JLabel lbl_month;
    private javax.swing.JLabel lbl_totalAllDay;
    private javax.swing.JLabel lbl_vnpay;
    private javax.swing.JLabel lbl_year;
    private javax.swing.JTextField txt_address;
    private javax.swing.JTextField txt_amount;
    private javax.swing.JTextField txt_giveBack;
    private javax.swing.JTextField txt_idMember;
    private javax.swing.JTextField txt_member;
    private javax.swing.JTextField txt_receive;
    private javax.swing.JTextField txt_type;
    private javax.swing.JTextField txt_voucher;
    // End of variables declaration//GEN-END:variables
}
